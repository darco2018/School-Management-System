#https://docs.spring.io/spring-boot/docs/current/reference/html/common-application-properties.html

#----------------------------------------
# SERVER
#--------------------------------------
server.port=8080
server.servlet.context-path=
#server.error.whitelabel.enabled=false
server.error.include-stacktrace=always
# server.  properties: sesionTimeout, address, contextpath etc (@ConfigurationProperties(prefix = "server", )

#----------------------------------------
# DATASOURCE / JPA 
#--------------------------------------
# Schema (DDL) script resource references.
#spring.datasource.schema=classpath*:db/${spring.datasource.platform}/schema.sql
#Data (DML) script resource references.
spring.datasource.data=classpath*:db/${spring.datasource.platform}/data.sql

# Uncomment next line on first run of the app . In REST I use embedded (for H2 only)
spring.datasource.initialization-mode=always
# Whether to initialize the schema on startup - nie tworzy schemas, gdy brak spring.datasource.initialization-mode=always
spring.jpa.hibernate.ddl-auto=create-drop

spring.jpa.show-sql=true
# use spring.jpa.properties. to set hibernate properties
spring.jpa.properties.hibernate.format_sql=true  
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL55Dialect

spring.datasource.name=a_school
connData=?createDatabaseIfNotExist=true&autoReconnect=true&useSSL=false&UseUnicode=true&characterEncoding=utf8
spring.datasource.continue-on-error=false 
spring.datasource.sql-script-encoding=UTF-8

# MySql ---------------------------------
# Platform to use in the DDL or DML scripts (such as schema-${platform}.sql or data-${platform}.sql).
spring.datasource.platform=mysql
spring.datasource.url=jdbc:mysql://localhost/${spring.datasource.name}${connData}
spring.datasource.username=root
spring.datasource.password=coderslab
# MySql ---------------------------------

# H2 ----------------------------------
#spring.datasource.platform=h2
#spring.datasource.url=jdbc:h2:file:~/${spring.datasource.name}${connData}
#spring.datasource.username=sa
#spring.datasource.password=
#spring.datasource.driver-class-name=org.h2.Driver
# H2 ----------------------------------
# Enabling H2 Console at
# spring.h2.console.enabled=true 
# spring.h2.console.path=/h2
# spring.jpa.database-platform=org.hibernate.dialect.H2Dialect

# H@ as persisted database
#spring.datasource.initialize=false
#spring.datasource.url=jdbc:h2:file:~/${spring.datasource.name};DB_CLOSE_ON_EXIT=FALSE;IFEXISTS=TRUE;DB_CLOSE_DELAY=-1;
#spring.jpa.hibernate.ddl-auto = update
# H2 ----------------------------------







#-----------------------------------------
# SPRING MVC (WebMvcProperties)
#-----------------------------------------
spring.mvc.view.prefix: /WEB-INF/views/
spring.mvc.view.suffix: .jsp
 # Whether a "NoHandlerFoundException" should be thrown if no Handler was found to process a request.
#both needed if we want to throw exceptions
spring.mvc.throw-exception-if-no-handler-found=true
spring.resources.add-mappings=true

server.error.whitelabel.enabled=false



# INTERNATIONALIZATION (MessageSourceProperties)
spring.mvc.locale=pl_PL
#spring.mvc.locale-resolver=fixed  overrides the default configuration: locale provided by the respective HTTP header. 

# Whether to fall back to the system Locale if no files for a specific Locale have been found.
spring.messages.fallback-to-system-locale=true
spring.messages.basename=messages/messages



# Actuator / Management / CORS ORIGINS
management.endpoints.web.base-path=/actuator
management.endpoints.web.exposure.include=*

management.endpoints.enabled-by-default=true
management.info.git.mode=full
management.endpoint.health.show-details=always


# Logging
logging.level.org.springframework=INFO
spring.output.ansi.enabled=ALWAYS
#logging.level.org.springframework.web=DEBUG
# logging.level.org.springframework.context.annotation=TRACE
# logging.level.org.hibernate.SQL=trace
logging.level.org.hibernate.stat=trace
logging.level.org.hibernate.type.descriptor.sql=trace
#logging.level.org.hibernate.type=trace
spring.jpa.properties.hibernate.generate_statistics=true
logging.level.org.hibernate=ERROR
#logging.level.org.springframework.security: DEBUG
#tdebug=true 
# a selection of core loggers (embedded container, Hibernate, and Spring Boot) are configured to output more information. 
#Enabling the debug mode does not configure your application to log all messages with DEBUG level.

# IDENTITY (ContextIdApplicationContextInitializer) # Application name.
spring.application.name=School 

# HTTP encoding (HttpEncodingProperties)
# Charset of HTTP requests and responses. Added to the "Content-Type" header if not set explicitly.
spring.http.encoding.charset=UTF-8 
# Whether to enable http encoding support.
spring.http.encoding.enabled=true 

# BANNER# 
spring.banner.charset=UTF-8 
spring.banner.location=classpath:banner.txt 
spring.main.banner-mode=console

# ----------------------------------------
# DEVTOOLS PROPERTIES
# ----------------------------------------

# DEVTOOLS (DevToolsProperties)
#spring.devtools.restart.additional-exclude= # Additional patterns that should be excluded from triggering a full restart.
#spring.devtools.restart.additional-paths= # Additional paths to watch for changes.
#i've removed resources/**,static/**,public/**,templates/**,
#spring.devtools.restart.exclude=META-INF/maven/**,META-INF/resources/**,**/*Test.class,**/*Tests.class,git.properties,META-INF/build-info.properties # Patterns that should be excluded from triggering a full restart.
#  Spring boot watches all files which are in 'target' folder
spring.devtools.restart.additional-paths=.

# ----------------------------------------
# CUSTOM MESSAGES
# ----------------------------------------

app.name=School
welcome.message=Welcome message from properties. Welcome to the ${app.name} app!





